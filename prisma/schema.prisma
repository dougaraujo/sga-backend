// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Supplier {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  supplierName    String @map("supplier_name")
  supplierAddress String? @map("supplier_address")
  supplierContact Int @map("supplier_contact")
  supplierProduct String @map("supplier_product")

  @@map("suppliers")
}

model Crop {
  id        Int       @id @default(autoincrement())
  cropName  String    @map("crop_name")
  harvests  Harvest[]

  @@map("crops")
}

model Harvest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  harvestName String @map("harvest_name")
  cropId      Int   @map("crop_id")
  crop         Crop   @relation(fields: [cropId], references: [id])
  farmId      Int @map("farm_id")
  farms        Farm[] @relation("Harvests")

  @@map("harvests")
}

model Farm {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  farmName      String @map("farm_name")
  farmArea      Float @map("farm_area")
  farmLocation  String @map("farm_location")
  farmSoilType String @map("farm_soil_type")

  harvests    Harvest[]    @relation("Harvests")
  activities  Activity[]
  occurrences Occurrence[]

  @@map("farms")
}

model Activity {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  title       String
  description String
  status      String @default("active")

  farmId Int @map("farm_id")
  farm    Farm @relation(fields: [farmId], references: [id])

  @@map("activities")
}

model Occurrence {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  title       String
  description String
  status      String @default("active")
  impact      String

  farmId Int @map("farm_id")
  farm    Farm @relation(fields: [farmId], references: [id])

  @@map("occurrences")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  email      String  @unique
  password   String
  firstName  String? @map("first_name")
  lastName   String? @map("last_name")
  role       String  @default("user")
  status     String  @default("active")

  @@map("users")
}

model Employee {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  firstName String @map("first_name")
  lastName  String @map("last_name")
  email      String? @unique
  phone      String?
  address    String?
  role       String
  status     String  @default("active")

  bankInformation BankInformation[]

  @@map("employees")
}

model BankInformation {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  bankName      String @map("bank_name")
  bankCode      Int   @map("bank_code")
  bankBranch    Int  @map("bank_branch")
  accountNumber String @map("account_number")
  accountName   String @map("account_name")
  status         String @default("active")

  employeeId Int @map("employee_id")
  employee    Employee @relation(fields: [employeeId], references: [id])

  @@map("payment_info")
}
